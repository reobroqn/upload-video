[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
# Set the maximum line length to 88 (Black's default)
line-length = 88

# Exclude files and directories
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
    "venv",
    "node_modules",
    "migrations"
]

# Target Python version
target-version = "py312"

# Formatting configuration
[tool.ruff.format]
# Use spaces for indentation
indent-style = "space"
# Use double quotes for strings
quote-style = "double"
# Add a trailing comma after the last item in a collection
skip-magic-trailing-comma = false
# Wrap expressions in parentheses when they're split across multiple lines
line-ending = "auto"

# Lint configuration
[tool.ruff.lint]
# Enable common Python rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "W",   # pycodestyle warnings
    "C4",  # flake8-comprehensions
    "A",   # flake8-builtins
    "S",   # flake8-bandit (security)
    "RUF", # Ruff-specific rules
]

# Ignore specific rules
ignore = [
    "D100",  # Missing module docstring
    "D203",  # 1 blank line required before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "E501",  # Line too long (handled by formatter)
    "S105",  # Possible hardcoded password
]

# Per-file-ignores
[tool.ruff.lint.per-file-ignores]
# Ignore missing docstrings in tests
"tests/*.py" = ["D100", "D101", "D102", "D103", "D104", "D105", "D107", "S101"]
# Ignore docstrings and line length in migrations
"migrations/*.py" = ["D", "E501"]
# Ignore docstrings in __init__.py files and allow unused imports
"**/__init__.py" = ["D100", "D103", "D104", "F401"]

[project]
name = "videoflow-backend"
version = "0.1.0"
description = "Backend for Video Upload and Playback Service"
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
dependencies = [
    "fastapi[standard]>=0.112.2",
    "python-multipart>=0.0.6",
    "minio>=7.1.1", # MinIO client library
    "psycopg2-binary>=2.9.9",
    "python-dotenv>=1.0.0",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    "pydantic-settings>=2.0.0",
    "alembic>=1.16.2",
    "sqlalchemy>=2.0.41",
]
requires-python = ">=3.12"

[dependency-groups]
dev = [
    "ruff",
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]
